version: '3.8'

services:
    db:
        image: postgres
        container_name: postgres
        restart: always
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: admin
        volumes:
            - dbdata:/var/lib/postgresql/data
        ports:
            - 5432:5432
        networks:
          - ecommerce

    arangodb:
        image: arangodb
        container_name: arangodb
        restart: always
        environment:
          - ARANGO_ROOT_PASSWORD=P4SSW0Rd!1
        volumes:
          - arangodb-data:/var/lib/arangodb3
        ports:
          - 8529:8529
        networks:
          - ecommerce

    profiler-service:
        build:
            context: ./src/Profiler
            dockerfile: Dockerfile
        container_name: profiler-service
        ports:
          - 8000:8000
        networks:
          - ecommerce

    backend-service:
        build:
            context: .
            dockerfile: Dockerfile.backend
        container_name: backend-service
        ports:
          - 5010:80
        depends_on:
            - db
            - arangodb
        networks:
          - ecommerce

    gateway-service:
        build:
            context: .
            dockerfile: Dockerfile.gateway
        container_name: gateway-service
        ports:
          - 5000:80
        depends_on:
            - backend-service
        networks:
          - ecommerce

    frontend-service:
        build:
            context: .
            dockerfile: Dockerfile.frontend.dev
            args:
                API_URL: http://gateway-service
        container_name: frontend-service
        command: npm run start
        ports:
          - 3000:3000
        volumes:
          - /app/node_modules
          - ./src/ui:/app
        depends_on:
            - gateway-service
        networks:
          - ecommerce

volumes:
  dbdata:
  arangodb-data:

networks:
  ecommerce:
    name: ecommerce-network
    external: true
